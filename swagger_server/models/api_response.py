# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ApiResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: str=None, sub_type: str=None, result: object=None):  # noqa: E501
        """ApiResponse - a model defined in Swagger

        :param type: The type of this ApiResponse.  # noqa: E501
        :type type: str
        :param sub_type: The sub_type of this ApiResponse.  # noqa: E501
        :type sub_type: str
        :param result: The result of this ApiResponse.  # noqa: E501
        :type result: object
        """
        self.swagger_types = {
            'type': str,
            'sub_type': str,
            'result': object
        }

        self.attribute_map = {
            'type': 'type',
            'sub_type': 'subType',
            'result': 'result'
        }
        self._type = type
        self._sub_type = sub_type
        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'ApiResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApiResponse of this ApiResponse.  # noqa: E501
        :rtype: ApiResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this ApiResponse.


        :return: The type of this ApiResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this ApiResponse.


        :param type: The type of this ApiResponse.
        :type type: str
        """

        self._type = type

    @property
    def sub_type(self) -> str:
        """Gets the sub_type of this ApiResponse.


        :return: The sub_type of this ApiResponse.
        :rtype: str
        """
        return self._sub_type

    @sub_type.setter
    def sub_type(self, sub_type: str):
        """Sets the sub_type of this ApiResponse.


        :param sub_type: The sub_type of this ApiResponse.
        :type sub_type: str
        """

        self._sub_type = sub_type

    @property
    def result(self) -> object:
        """Gets the result of this ApiResponse.


        :return: The result of this ApiResponse.
        :rtype: object
        """
        return self._result

    @result.setter
    def result(self, result: object):
        """Sets the result of this ApiResponse.


        :param result: The result of this ApiResponse.
        :type result: object
        """

        self._result = result
